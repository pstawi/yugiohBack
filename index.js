// importation du module express
import express from 'express';
// importation de la connexion Ã  la base de donnÃ©es
import connexion from './config/bdd.js';
// importation des routes utilisateurs
import utilisateurRoutes from './Routes/utilisateurRoute.js';
import carteRoutes from './Routes/carteRoute.js';
import collectionRoutes from './Routes/collectionRoute.js';
import deckRoutes from './Routes/deckRoute.js';
import attributRoutes from './Routes/attributRoute.js';
import editionRoutes from './Routes/editionRoute.js';
import rareteRoutes from './Routes/rareteRoute.js';
import typeRoutes from './Routes/typeRoute.js';

// crÃ©ation de l'application express
const app = express();

// middleware pour utiliser le format JSON
app.use(express.json());

// utilisation des routes avec le prÃ©fixe /api
app.use('/api',
    utilisateurRoutes,
    carteRoutes,
    collectionRoutes,
    deckRoutes,
    attributRoutes,
    editionRoutes,
    rareteRoutes,
    typeRoutes
);

// dÃ©finition de la route pour l'URL /accueil
app.get('/', (req, res) => {
    // envoi de la rÃ©ponse "Hello World"
    res.send('Hello pierre');
});

// dÃ©finition de la route pour l'URL /users
// mauvaise mÃ©thode
app.get('/users', async (req, res) => {
    try{
        // exÃ©cution de la requÃªte SQL pour rÃ©cupÃ©rer tous les utilisateurs
    const [utilisateurs] = await connexion.query("SELECT * FROM utilisateur");
    // envoi de la rÃ©ponse avec les utilisateurs rÃ©cupÃ©rÃ©s
    res.status(200).json({message: "Utilisateurs rÃ©cupÃ©rÃ©s avec succÃ¨s", utilisateurs});
    }catch(error){
        // si une erreur survient, on l'affiche dans la console
        console.error("Erreur lors de la rÃ©cupÃ©ration des utilisateurs:", error);
    }

});

app.get('/cards/yugioh', (req, res) => {
    res.send('Voici les cartes Yu-Gi-Oh!');
});

// dÃ©marrage du serveur sur le port 3000
app.listen(3000, () => {
    // message dans la console lorsque le serveur est dÃ©marrÃ©
    console.log('Serveur dÃ©marrÃ© sur le port 3000 ğŸŸ¢â€‹');
});